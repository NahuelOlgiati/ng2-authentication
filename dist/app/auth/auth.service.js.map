{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["../../home/tallion.com.ar/nolgiati/Desktop/ng2-authentication/tmp/broccoli_type_script_compiler-input_base_path-TUieP6t6.tmp/0/src/app/auth/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Http, Response, Headers } from \"@angular/http\";\nimport { Observable } from 'rxjs/Observable';\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/Rx';\n\nimport { User } from \"../shared/user.interface\";\n\n@Injectable()\nexport class AuthService {\n\n  // for change the navbar state between online and offline\n  private authenticate = new Subject<boolean>();\n  authenticateState$ = this.authenticate.asObservable();\n\n  constructor(private http: Http, private router: Router) { }\n\n  signupUser(user: User) {\n    console.log('Entrando Serv signupUser');\n    const body = 'email=' + user.email + '&password=' + user.password;\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    //headers.append('Authorization', 'Basic QmFzaWM6QmFzaWM=');\n    return this.http.post('http://localhost:8080/villegas-tax-web/rest/user', body, {\n      headers: headers\n    })\n      .map((res:Response) => res.json())\n      .catch(error => {\n        console.log('Falló signupUser Mapeo');\n        console.log(error);\n        return Observable.throw(error.json());\n      });\n  }\n\n  signinUser(user: User) {\n    console.log('Entrando Serv signinUser');\n    const body = 'email=' + user.email + '&password=' + user.password;\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    return this.http.post('http://localhost:8080/villegas-tax-web/rest/user', body, {\n      headers: headers\n    })\n      .map(res => res.json())\n      .catch(error => {\n        console.log('Falló signinUser Mapeo');\n        return Observable.throw(error.json());\n      });\n  }\n\n  // delete the token in localStorage and change the navbar state\n  logout(): void {\n    localStorage.removeItem('token');\n    this.authenticate.next(false);\n  }\n\n  // save the token in localStorage and change the navbar state\n  saveToken(token: string): void {\n    console.log('saveToken:' + token);\n    localStorage.setItem('token', token);\n    this.authenticate.next(true);\n  }\n\n  // return if the user is authenticate\n  isAuthenticated(): boolean {\n    let isAuth: boolean;\n    if (localStorage.getItem('token')) {\n      isAuth = true;\n    } else {\n      isAuth = false;\n    }\n    console.log('Is Authenticated:' + isAuth);\n    return isAuth;\n  }\n}\n"]}